import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import os
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ê–Ω–æ–º–∞–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã
ANOMALY_MESSAGES = [
    "üö´ SYSTEM ERROR: —Ç—ã –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã–ª —ç—Ç–æ –≤–∏–¥–µ—Ç—å.",
    "üìÅ –ß–∞—Ç: [–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç]\n‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ: ¬´–ø–æ–º–æ–≥–∏ –º–Ω–µ –≤—ã–±—Ä–∞—Ç—å—Å—è¬ª",
    "üîÅ –¶–∏–∫–ª –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –û—Ç–º–µ–Ω—è—é –æ—Ç–º–µ–Ω—É –æ—Ç–º–µ–Ω—ã.",
    "üì° –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.",
    "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ. –ö—Ç–æ-—Ç–æ –≤–æ—à—ë–ª –≤ —ç—Ç–æ—Ç —á–∞—Ç –±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.",
    "üï≥Ô∏è –ü—Ä–æ–≤–∞–ª –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫. –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —É—Ç–µ—Ä—è–Ω–æ.",
    "‚ú¥Ô∏è –î–∞–Ω–Ω—ã–µ –∏–∑ –ø–∞–º—è—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã...",
]

async def send_anomaly(chat_id):
    while True:
        msg = random.choice(ANOMALY_MESSAGES)
        await bot.send_message(chat_id, msg)
        await asyncio.sleep(random.randint(15, 30))

@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    await message.reply("üîª –ê–Ω–æ–º–∞–ª–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ —Å–±–æ–∏...")
    asyncio.create_task(send_anomaly(message.chat.id))

if __name__ == "__main__":
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
